library(vegan)
library(vegan)
library(lme4)
library(lsmeans)
detach("package:lme4", unload = TRUE)
library(lme4)
library(nlme)
library(jtools)
library(interactions)
library(animation)
x11()
saveHTML(expr, img.name = "Rplot", global.opts = "", single.opts = "",
navigator = ani.options("nmax") <= 100 && ani.options("interval") >=
0.05, htmlfile = "index.html", ...)
saveHTML(expr, img.name = "Rplot", global.opts = "", single.opts = "",
navigator = ani.options("nmax") <= 100 && ani.options("interval") >=
0.05, htmlfile = "index.html")
library(bioregion)
detach("package:bioregion", unload = TRUE)
detach("package:animation", unload = TRUE)
moth <- read.csvI(file.choose())
moth <- read.csv(file.choose())
summary(moth)
str(moth)
load("~/.RData")
moth <- read.csv(file.choose())
summary(moth)
str(moth)
moth <- read.csv(file.choose())
summary(moth)
str(moth)
moth <- read.csv(file.choose())
summary(moth)
str(moth)
hist(moth$number)
ks.test(moth$number)
shapiro.test(moth$number)
aov(number~trap+Location+trap:Location)
aov(number~trap+Location+trap:Location, data=moth)
ANOVA <- aov(number~trap+Location+trap:Location, data=moth)
summary.lm(ANOVA)
ANOVA <- aov(number~trap+Location+trap, data=moth)
summary.lm(ANOVA)
mod <- glm(number~trap+Location+trap, family=poisson, data=moth)
summary(mod)
library(lme4)
mod2.9<-glmer(number~site+trap+(1|Location), data=mod,family=poisson)
library(lme4)
library(nlme)
mod2.9<-glmer(number~site+trap+(1|Location), data=mod,family=poisson)
mod2.9<-glmer(number~trap+(1|Location), data=mod,family=poisson)
mod2.9<-glmer(number~trap+(1|Location), data=moth,family=poisson)
mod1.1<-lme(log(number)~trap, random = ~1|Location, data=moth,
method = "ML",na.action = "na.exclude")
summary(mod1.0)
mod1.0<-glmer(number~trap+(1|Location), data=moth,family=poisson)
summary(mod1.0)
summary(mod1.1)
shapiro.test(log(number$moth))
str(moth)
shapiro.test(log(number$moth))
log(number$moth)
log(moth$number)
shapiro.test(log(moth$number))
library(tidyverse)
install.packages("purrr")
install.packages("purrr")
install.packages("here")
library(here)
library(tidyverse)
install.packages("purrr")
library(tidyverse)
install.packages("dbplyr")
library(tidyverse)
detach("package:tidyverse", unload = TRUE)
library(tidyverse)
install.packages("dbplyr")
library(tidyverse)
remove.packages("tidyverse", lib="~/R/win-library/3.5")
install.packages("tidyverse")
library(tidyverse)
install.packages("dbplyr")
library(tidyverse)
library(tidyverse)
library(rvest)
url <- "https://www.worldometers.info/coronavirus/"
my_table<-url%>%read_html()%>%html_table()%>%.[[1]]
# There are some "+" symbols and the ","
# for the thousand separators that we wan to remove them
my_table[]<-lapply(my_table, function(x) (gsub("\\,|\\+", "", (x))))
# There are some "+" symbols and the ","
# for the thousand separators that we wan to remove them
my_table[]<-lapply(my_table, function(x) (gsub("\\,|\\+", "", (x))))
my_table<-url%>%read_html()%>%html_table()%>%.[[1]]
my_table
# There are some "+" symbols and the ","
# for the thousand separators that we wan to remove them
my_table[]<-lapply(my_table, function(x) (gsub("\\,|\\+", "", (x))))
my_table[,c(2:12)] <- sapply(my_table[c(2:12)],as.numeric)
my_table%>%arrange(-`Deaths/1M pop`)%>%
select(`Country,Other`,`Deaths/1M pop`)%>%
head(10)
my_table%>%arrange(-`Deaths/1M pop`)%>%
select(`Country,Other`,`Deaths/1M pop`)%>%
tail(10)
library(tidyverse)
# There are some "+" symbols and the ","
# for the thousand separators that we wan to remove them
my_table[]<-lapply(my_table, function(x) (gsub("\\,|\\+", "", (x))))
View(my_table)
my_table[,c(2:12)] <- sapply(my_table[c(2:12)],as.numeric)
my_table%>%arrange(-`Deaths/1M pop`)%>%
select(`Country,Other`,`Deaths/1M pop`)%>%
tail(10)
my_table%>%arrange(-`Deaths/1M pop`)%>%
select(`Country,Other`,`Deaths/1M pop`)%>%
head(10)
demo(package = "rvest")
library(knitr)
library(rmarkdown)
library(markdown)
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
summary(cars)
plot(pressure)
mean(5,10,15)
install.packages("sqldf")
library(sqldf)
lirary('usethis')
library('usethis')
use_git_config(user.name = "bdanmallam", user.email = "adamubello001@gmail.com")
library('usethis')
use_git_config(user.name = "bdanmallam", user.email = "adamubello001@gmail.com")
use_git_config(user.name = "bdanmallam", user.email = "adamubello001@gmail.com")
library('usethis')
use_git_config(user.name = "bdanmallam", user.email = "adamubello001@gmail.com")
use_git_config(user.name = "bdanmallam", user.email = "adamubello001@gmail.com")
https://github.com/bdanmallam/myrepo.git
library(rmarkdown)
create.file('_site.yml')
file.create('_site.yml')
file.create('index.Rmd') #Create the main rmd file
file.create('about.Rmd') #Create an about file
#render your sweet site.
rmarkdown::render_site()
setwd("~/myrepo")
#render your sweet site.
rmarkdown::render_site()
#render your sweet site.
rmarkdown::render_site()
#render your sweet site.
rmarkdown::render_site()
setwd("~/")
setwd("C:/Users/HF/Desktop/cv")
library(knitr)
library(rmarkdown)
library(markdown)
library(sqldf)
###devtools::install_github("nstrayer/datadrivencv")
library(datadrivencv)
library(pagedown)
get(wd)
# run ?datadrivencv::use_datadriven_cv to see more details
datadrivencv::use_datadriven_cv(
full_name = "Danmallam Bello Adamu",
data_location = "https://docs.google.com/spreadsheets/d/1PenoKjI4_4f75Mx4XQVeUZLB_wg7vfc6GGepjxIhaSE/edit?usp=sharing",
pdf_location = "https://github.com/bdanmallam/cv/blob/master/cv.pdf",
html_location = "https://github.com/bdanmallam/cv",
source_location = "https://github.com/nstrayer/cv"
)
# Knit the HTML version
rmarkdown::render("cv.rmd",
params = list(pdf_mode = FALSE),
output_file = "cv.html")
# Knit the PDF version to temporary html location
tmp_html_cv_loc <- fs::file_temp(ext = ".html")
rmarkdown::render("cv.rmd",
params = list(pdf_mode = TRUE),
output_file = tmp_html_cv_loc)
# Convert to PDF using Pagedown
pagedown::chrome_print(input = tmp_html_cv_loc,
output = "cv.pdf")
# run ?datadrivencv::use_datadriven_cv to see more details
datadrivencv::use_datadriven_cv(
full_name = "Danmallam Bello Adamu",
data_location = "https://docs.google.com/spreadsheets/d/1PenoKjI4_4f75Mx4XQVeUZLB_wg7vfc6GGepjxIhaSE/edit?usp=sharing",
pdf_location = "https://github.com/bdanmallam/cv/blob/master/cv.pdf",
html_location = "https://github.com/bdanmallam/cv",
source_location = "https://github.com/nstrayer/cv"
)
# Knit the HTML version
rmarkdown::render("cv.rmd",
params = list(pdf_mode = FALSE),
output_file = "cv.html")
# Knit the PDF version to temporary html location
tmp_html_cv_loc <- fs::file_temp(ext = ".html")
rmarkdown::render("cv.rmd",
params = list(pdf_mode = TRUE),
output_file = tmp_html_cv_loc)
# run ?datadrivencv::use_datadriven_cv to see more details
datadrivencv::use_datadriven_cv(
full_name = "Danmallam Bello Adamu",
data_location = "https://docs.google.com/spreadsheets/d/1PenoKjI4_4f75Mx4XQVeUZLB_wg7vfc6GGepjxIhaSE/edit?usp=sharing",
pdf_location = "https://github.com/bdanmallam/cv/blob/master/cv.pdf",
html_location = "https://github.com/bdanmallam/cv",
source_location = "https://github.com/nstrayer/cv"
)
# run ?datadrivencv::use_datadriven_cv to see more details
datadrivencv::use_datadriven_cv(
full_name = "Danmallam Bello Adamu",
data_location = "https://docs.google.com/spreadsheets/d/1PenoKjI4_4f75Mx4XQVeUZLB_wg7vfc6GGepjxIhaSE/edit?usp=sharing",
pdf_location = "https://github.com/bdanmallam/cv/blob/master/cv.pdf",
html_location = "https://github.com/bdanmallam/cv",
source_location = "https://github.com/nstrayer/cv"
)
# Knit the HTML version
rmarkdown::render("cv.rmd",
params = list(pdf_mode = FALSE),
output_file = "cv.html")
# Knit the PDF version to temporary html location
tmp_html_cv_loc <- fs::file_temp(ext = ".html")
rmarkdown::render("cv.rmd",
pcarams = list(pdf_mode = TRUE),
output_file = tmp_html_cv_loc)
rmarkdown::render("cv.rmd",
pcarams = list(pdf_mode = TRUE),
output_file = tmp_html_cv_loc)
rmarkdown::render("cv.rmd",
pcarams = list(pdf_mode = TRUE),
output_file = tmp_html_cv_loc)
# Convert to PDF using Pagedown
pagedown::chrome_print(input = tmp_html_cv_loc,
output = "cv.pdf")
# Knit the HTML version
rmarkdown::render("cv.rmd",
params = list(pdf_mode = FALSE),
output_file = "cv.html")
# Knit the PDF version to temporary html location
tmp_html_cv_loc <- fs::file_temp(ext = ".html")
rmarkdown::render("cv.rmd",
pcarams = list(pdf_mode = TRUE),
output_file = tmp_html_cv_loc)
# Knit the PDF version to temporary html location
tmp_html_cv_loc <- fs::file_temp(ext = ".html")
rmarkdown::render("cv.rmd",
pcarams = list(pdf_mode = TRUE),
output_file = tmp_html_cv_loc)
###devtools::install_github("nstrayer/datadrivencv")
library(datadrivencv)
library(pagedown)
# run ?datadrivencv::use_datadriven_cv to see more details
datadrivencv::use_datadriven_cv(
full_name = "Danmallam Bello Adamu",
data_location = "https://docs.google.com/spreadsheets/d/1PenoKjI4_4f75Mx4XQVeUZLB_wg7vfc6GGepjxIhaSE/edit?usp=sharing",
pdf_location = "https://github.com/bdanmallam/cv/blob/master/cv.pdf",
html_location = "https://github.com/bdanmallam/cv",
source_location = "https://github.com/nstrayer/cv"
)
# Knit the HTML version
rmarkdown::render("cv.rmd",
params = list(pdf_mode = FALSE),
output_file = "cv.html")
# Knit the HTML version
rmarkdown::render("cv.rmd",
params = list(pdf_mode = FALSE),
output_file = "cv.html")
# Knit the PDF version to temporary html location
tmp_html_cv_loc <- fs::file_temp(ext = ".html")
rmarkdown::render("cv.rmd",
pcarams = list(pdf_mode = TRUE),
output_file = tmp_html_cv_loc)
# Knit the PDF version to temporary html location
tmp_html_cv_loc <- fs::file_temp(ext = ".html")
rmarkdown::render("cv.rmd",
pcarams = list(pdf_mode = TRUE),
output_file = tmp_html_cv_loc)
# Knit the HTML version
rmarkdown::render("cv.rmd",
params = list(pdf_mode = FALSE),
output_file = "cv.html")
# run ?datadrivencv::use_datadriven_cv to see more details
datadrivencv::use_datadriven_cv(
full_name = "Danmallam Bello Adamu",
data_location = "https://docs.google.com/spreadsheets/d/1PenoKjI4_4f75Mx4XQVeUZLB_wg7vfc6GGepjxIhaSE/edit?usp=sharing",
pdf_location = "https://github.com/bdanmallam/cv/blob/master/cv.pdf",
html_location = "https://github.com/bdanmallam/cv",
source_location = "https://github.com/nstrayer/cv"
)
# run ?datadrivencv::use_datadriven_cv to see more details
datadrivencv::use_datadriven_cv(
full_name = "Danmallam Bello Adamu",
data_location = "https://docs.google.com/spreadsheets/d/1PenoKjI4_4f75Mx4XQVeUZLB_wg7vfc6GGepjxIhaSE/edit?usp=sharing",
pdf_location = "https://github.com/bdanmallam/cv/blob/master/cv.pdf",
html_location = "https://github.com/bdanmallam/cv",
source_location = "https://github.com/nstrayer/cv"
)
# Knit the HTML version
rmarkdown::render("cv.rmd",
params = list(pdf_mode = FALSE),
output_file = "cv.html")
# Knit the PDF version to temporary html location
tmp_html_cv_loc <- fs::file_temp(ext = ".html")
rmarkdown::render("cv.rmd",
params = list(pdf_mode = TRUE),
output_file = tmp_html_cv_loc)
# Convert to PDF using Pagedown
pagedown::chrome_print(input = tmp_html_cv_loc,
output = "cv.pdf")
setwd("C:/Users/HF/Desktop/personal_site")
#render site
rmarkdown::render_site()
#render site
rmarkdown::render_site()
